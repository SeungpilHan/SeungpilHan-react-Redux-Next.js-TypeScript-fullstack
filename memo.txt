---------------- Explanation -----------------
Component : 사용자 인터페이스에서 재사용할 수 있는 빌딩 블록
            HTML에 결합
            장점 : 재사용이 가능하다, 우려 사항을 분리할 수 있다.
            코드를 작은단위로 관리할 수 있다.
            컴포넌트는 선언 접근방식이다
            컴포넌트는 HTML CSS 자바스크립트로 구성되어 있다.

Div : <div> 요소는 여러 HTML 요소들을 하나로 묶어주어 
      CSS로 스타일을 변경하거나 자바스크립트로 특정 작업을 수행하기 위한 일종의 컨테이너(container)로 자주 사용됩니다. 
      또한, CSS와 함께 웹 페이지의 레이아웃(layout)을 설정하는데도 종종 사용됩니다.

JSX : React에서는 본질적으로 렌더링 로직이 
      UI 로직(이벤트가 처리되는 방식, 시간에 따라 state가 변하는 방식, 화면에 표시하기 위해 데이터가 준비되는 방식 등)과 
      연결된다는 사실을 받아들입니다.

const : 절대 변하지않는 함수

props : 프로퍼티를 뜻한다,
        참조 : https://codingmania.tistory.com/274

composition : 작은 빌딩 블록을 모아서 사용자 인터페이스를 만드는 것        
        
----------------- source -------------------
npm run build : 리액트 실행 명령어

-커밋
Git status
git add -A
git commit -m "test3"
git push

-Shift + option + f : 소스코드 자동정렬

----------------- 기억해야 하는 내용 ----------------
-index.js 파일이 실행되는 첫 번째 파일이다.
-리액트, 리액트 돔 : 두 개의 분리된 패키지 이지만 라이브러리 리액트로 생각할 수 있다.
-
ReactDOM.render(
  <React.StrictMode><App /></React.StrictMode>,document.getElementById('root')
);
      자바스크립트 돔 API 매개변수
-.app 도 결국 컴포넌트이다.


<div className = "expenses"></div>
